{"version":3,"sources":["components/Profile/Stats/Stats.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.module.css","components/Statistic/Statistic.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Stats/Stats.js","components/Profile/Profile.js","components/Statistic/Statistic.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Stat","followers","views","likes","className","Styles","stats","statsItem","label","quantity","Profile","name","tag","location","avatar","profile","description","src","alt","Stats","Statistic","title","statistics","statList","map","id","percentage","key","style","backgroundColor","Math","random","item","propType","PropTypes","string","arrayOf","shape","isRequired","number","FriendListItem","isOnline","statusClasses","status","push","active","join","width","FriendList","friends","friendList","TransactionHistory","transactions","transactionHistory","tableTitle","tableRows","tableCells","type","amount","currency","App","userData","statisticalData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77f71755.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__3rTij\",\"statsItem\":\"Stats_statsItem__3LBzD\",\"label\":\"Stats_label__1mFO8\",\"quantity\":\"Stats_quantity__1DKhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__SjLGL\",\"tableTitle\":\"TransactionHistory_tableTitle__3B0MV\",\"tableCells\":\"TransactionHistory_tableCells__1-1S4\",\"tableRows\":\"TransactionHistory_tableRows__2CzPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3zgn6\",\"description\":\"Profile_description__3WAE8\",\"avatar\":\"Profile_avatar__xz8b7\",\"name\":\"Profile_name__1QV8e\",\"tag\":\"Profile_tag__1iAl4\",\"location\":\"Profile_location__gkwxy Profile_tag__1iAl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__2cMTe\",\"title\":\"Statistic_title__251ED\",\"statList\":\"Statistic_statList__21qxM\",\"item\":\"Statistic_item__3XWrZ\",\"label\":\"Statistic_label__2GOF_\",\"percentage\":\"Statistic_percentage__2lcyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__VyAc-\",\"status\":\"FriendListItem_status__1gXYb\",\"active\":\"FriendListItem_active__1Q3oo\",\"avatar\":\"FriendListItem_avatar__q_0lR\",\"name\":\"FriendListItem_name__1CkWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__R7-mQ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './Stats.module.css';\n\nconst Stat = ({ followers = 0, views = 0, likes = 0 }) => (\n  <ul className={Styles.stats}>\n    <li className={Styles.statsItem}>\n      <span className={Styles.label}>Followers</span>\n      <span className={Styles.quantity}>{followers}</span>\n    </li>\n    <li className={Styles.statsItem}>\n      <span className={Styles.label}>Views</span>\n      <span className={Styles.quantity}>{views}</span>\n    </li>\n    <li className={Styles.statsItem}>\n      <span className={Styles.label}>Likes</span>\n      <span className={Styles.quantity}>{likes}</span>\n    </li>\n  </ul>\n);\n\nStat.propTypes = {\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default Stat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Stats from './Stats/Stats';\nimport Styles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={Styles.profile}>\n    <div className={Styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={Styles.avatar} />\n      <p className={Styles.name}>{name}</p>\n      <p className={Styles.tag}>@{tag}</p>\n      <p className={Styles.location}>{location}</p>\n    </div>\n    <Stats {...stats} />\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './Statistic.module.css';\n\nconst backgroundColorGenerator = () =>\n  `rgb(${Math.random() * 255},${Math.random() * 255},${Math.random() * 255})`;\n\nconst Statistic = ({ title, stats = [] }) => (\n  <section className={Styles.statistics}>\n    {title && <h2 className={Styles.title}>{title}</h2>}\n\n    <ul className={Styles.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li\n          key={id}\n          style={{ backgroundColor: backgroundColorGenerator() }}\n          className={Styles.item}\n        >\n          <span className={Styles.label}>{label}</span>\n          <span className={Styles.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistic.propType = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline = false }) => {\n  const statusClasses = [Styles.status];\n  isOnline && statusClasses.push(Styles.active);\n  return (\n    <li className={Styles.item}>\n      <span className={statusClasses.join(' ')}></span>\n      <img className={Styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={Styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem/FriendListItem';\nimport Styles from './FriendList.module.css';\n\nconst FriendList = ({ friends = [] }) => (\n  <ul className={Styles.friendList}>\n    {friends.map(item => (\n      <FriendListItem key={item.id} {...item} />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      isOnline: PropTypes.bool,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={Styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th className={Styles.tableTitle}>Type</th>\n        <th className={Styles.tableTitle}>Amount</th>\n        <th className={Styles.tableTitle}>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {transactions.map(item => (\n        <tr className={Styles.tableRows} key={item.id}>\n          <td className={Styles.tableCells}>{item.type}</td>\n          <td className={Styles.tableCells}>{item.amount}</td>\n          <td className={Styles.tableCells}>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './Profile/Profile';\nimport userData from './Profile/user.json';\nimport Statistic from './Statistic/Statistic';\nimport statisticalData from './Statistic/statistical-data.json';\nimport friends from './FriendList/friends.json';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport transactions from './TransactionHistory/transactions.json';\n\nconst App = () => (\n  <div>\n    <Profile {...userData} />\n    <Statistic title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory transactions={transactions} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}