{"version":3,"sources":["components/Profile/Profile.styled.js","components/Profile/StatsEl.js","components/Profile/Profile.js","components/Statistic/Statistic.styled.js","components/Statistic/Statistic.js","randomColor.js","components/FriendList/FriendList.styled.js","components/FriendList/FrendListElement.js","components/FriendList/FriendList.js","components/Transactions/Transactions.styled.js","components/Transactions/Transactions.js","GlobalStyle.js","components/App.js","index.js"],"names":["Wrapper","styled","div","Description","Avatar","img","Name","p","Tag","Location","Stats","ul","StatsElement","li","Label","span","Quantity","StatsEl","label","quantity","Profile","user","src","avatar","alt","name","tag","location","stats","followers","views","likes","elements","length","Statistics","section","props","title","Title","h2","List","ListElemnt","Percentage","Statistic","statistics","map","stat","key","id","style","backgroundColor","Math","floor","random","toString","substr","percentage","FriendsList","FriendsListElementS","OnlineIndicator","online","FrendListElement","friend","isOnline","width","FriendList","friends","Table","table","TableHead","tr","HeadTh","th","TableBodyTr","TableBodyTd","td","Transactions","transactions","item","type","amount","currency","Global","createGlobalStyle","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d59d371e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  width: 250px;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n  margin-bottom: 15px;\n`;\n\nexport const Description = styled.div`\n  padding-top: 30px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.p`\n  color: #122236;\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 11px;\n`;\n\nexport const Tag = styled.p`\n  color: #768696;\n  font-size: 14px;\n  margin-bottom: 11px;\n`;\n\nexport const Location = styled.p`\n  color: #768696;\n  font-size: 14px;\n  margin-bottom: 30px;\n`;\n\nexport const Stats = styled.ul`\n  list-style: none;\n  display: flex;\n  background-color: #f3f6f9;\n  border-top: 1px solid #e4e9f0;\n`;\n\nexport const StatsElement = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 33.3333333%;\n  min-height: 76px;\n  border-right: 1px solid #e4e9f0;\n\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const Label = styled.span`\n  font-size: 12px;\n  color: #768696;\n  line-height: 32px;\n`;\n\nexport const Quantity = styled.span`\n  color: #1f3349;\n  font-size: 14px;\n  font-weight: 700;\n`;\n","import React from \"react\";\nimport { StatsElement, Label, Quantity } from \"./Profile.styled\";\nimport PropTypes from \"prop-types\";\n\nconst StatsEl = ({ label, quantity }) => (\n  <StatsElement>\n    <Label>{label}</Label>\n    <Quantity>{quantity}</Quantity>\n  </StatsElement>\n);\n\nexport default StatsEl;\n\nStatsEl.propTypes = {\n  label: PropTypes.string.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Wrapper,\n  Avatar,\n  Description,\n  Name,\n  Tag,\n  Location,\n  Stats,\n} from \"./Profile.styled\";\nimport StatsEl from \"./StatsEl\";\n\nconst Profile = ({ user }) => (\n  <Wrapper>\n    <Description>\n      <Avatar src={user.avatar} alt={user.name} />\n      <Name>{user.name}</Name>\n      <Tag>{\"@\" + user.tag}</Tag>\n      <Location>{user.location}</Location>\n    </Description>\n\n    <Stats>\n      <StatsEl label=\"Followers\" quantity={user.stats.followers} />\n      <StatsEl label=\"Views\" quantity={user.stats.views} />\n      <StatsEl label=\"Likes\" quantity={user.stats.likes} />\n    </Stats>\n  </Wrapper>\n);\n\nProfile.propTypes = {\n  user: PropTypes.exact({\n    avatar: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.exact({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }),\n  }),\n};\nexport default Profile;\n","import styled from \"styled-components\";\nimport stats from \"../../data/statistical-data.json\";\n\nlet mainWidth = 250;\nconst elements = stats.length;\n\nexport const Statistics = styled.section`\n  margin: 0 auto;\n  width: ${mainWidth}px;\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n  padding-top: ${props => (props.title ? \"25px\" : \"0\")};\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 25px;\n  color: #475965;\n  font-size: 16px;\n  text-transform: uppercase;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  font-weight: 300;\n  display: flex;\n  width: 100%;\n`;\n\nexport const ListElemnt = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: ${mainWidth / elements}px;\n  height: ${mainWidth / elements}px;\n  max-height: 60px;\n  padding-top: 3%;\n`;\n\nexport const Label = styled.span`\n  color: #fff;\n  font-size: 12px;\n`;\n\nexport const Percentage = styled.span`\n  color: #fff;\n  font-size: 18px;\n  font-family: \"Roboto\", sans-serif;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Statistics,\n  Title,\n  List,\n  ListElemnt,\n  Label,\n  Percentage\n} from \"./Statistic.styled\";\nimport { getRandomColor } from \"../../randomColor\";\n\nconst Statistic = ({ statistics, title }) => (\n  <Statistics title={title}>\n    {title && <Title>{title}</Title>}\n\n    <List>\n      {statistics.map(stat => (\n        <ListElemnt key={stat.id} style={{ backgroundColor: getRandomColor() }}>\n          <Label>{stat.label}</Label>\n          <Percentage>{stat.percentage}%</Percentage>\n        </ListElemnt>\n      ))}\n    </List>\n  </Statistics>\n);\n\nStatistic.propTypes = {\n  statistics: PropTypes.arrayOf(\n    PropTypes.exact({\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nexport default Statistic;\n","export function getRandomColor() {\n  const hex = Math.floor(Math.random() * 0xffffff);\n  return \"#\" + (\"000000\" + hex.toString(16)).substr(-6);\n}\n","import styled from \"styled-components\";\n\nexport const FriendsList = styled.ul`\n  margin: 0 auto;\n  width: 250px;\n  list-style: none;\n  margin-bottom: 15px;\n`;\n\nexport const FriendsListElementS = styled.li`\n  display: flex;\n  align-items: center;\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n  margin-bottom: 8px;\n  padding: 4px 8px;\n`;\n\nexport const OnlineIndicator = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: ${(props) => (props.online ? \"green\" : \"red\")};\n  margin-right: 8px;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 5px;\n  margin-right: 8px;\n`;\n\nexport const Name = styled.p`\n  font-size: 22px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  OnlineIndicator,\n  FriendsListElementS,\n  Avatar,\n  Name,\n} from \"./FriendList.styled\";\n\nconst FrendListElement = ({ friend }) => (\n  <FriendsListElementS>\n    <OnlineIndicator online={friend.isOnline}></OnlineIndicator>\n    <Avatar src={friend.avatar} alt=\"avatar\" width=\"60\"></Avatar>\n    <Name>{friend.name}</Name>\n  </FriendsListElementS>\n);\n\nFrendListElement.propTypes = {\n  friend: PropTypes.exact({\n    avatar: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default FrendListElement;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FriendsList } from \"./FriendList.styled\";\nimport FrendListElement from \"./FrendListElement\";\n\nconst FriendList = ({ friends }) => (\n  <FriendsList>\n    {friends.map((friend) => (\n      <FrendListElement friend={friend} key={friend.id} />\n    ))}\n  </FriendsList>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default FriendList;\n","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n  width: 870px;\n  margin: 0 auto;\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n  border-spacing: 0;\n`;\n\nexport const TableHead = styled.tr`\n  width: 100%;\n  color: #fff;\n  font-size: 13px;\n  background-color: #00bcd4;\n  text-transform: uppercase;\n`;\n\nexport const HeadTh = styled.th`\n  width: 33.333%;\n  padding: 15px;\n  border-right: 1px solid #fff;\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const TableBodyTr = styled.tr`\n  &:nth-child(even) {\n    background-color: #ecf2f3;\n  }\n`;\n\nexport const TableBodyTd = styled.td`\n  color: #5c6975;\n  font-size: 15px;\n  padding: 15px;\n  text-align: center;\n  border-right: 1px solid #e0e6e7;\n  &:last-child {\n    border-right: none;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table,\n  TableHead,\n  HeadTh,\n  TableBodyTr,\n  TableBodyTd\n} from \"./Transactions.styled\";\n\nconst Transactions = ({ transactions }) => (\n  <Table>\n    <thead>\n      <TableHead>\n        <HeadTh>Type</HeadTh>\n        <HeadTh>Amount</HeadTh>\n        <HeadTh>Currency</HeadTh>\n      </TableHead>\n    </thead>\n\n    <tbody>\n      {transactions.map(item => (\n        <TableBodyTr key={item.id}>\n          <TableBodyTd>{item.type}</TableBodyTd>\n          <TableBodyTd>{item.amount}</TableBodyTd>\n          <TableBodyTd>{item.currency}</TableBodyTd>\n        </TableBodyTr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nTransactions.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default Transactions;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const Global = createGlobalStyle`\n@font-face {\n    font-family:'Roboto' ;\n    src: url('https://fonts.googleapis.com/css?family=Roboto:300,400&display=swap');\n}\n\nhtml {\n    box-sizing: border-box;\n    font-family: \"Roboto\", sans-serif;\n\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: inherit;\n}\n* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    padding-top: 40px;\n}\n`;\n","import React from \"react\";\nimport Profile from \"./Profile/Profile\";\nimport Statisctic from \"./Statistic/Statistic\";\nimport FriendList from \"./FriendList/FriendList\";\nimport Transactions from \"./Transactions/Transactions\";\nimport { Global } from \"../GlobalStyle\";\nimport user from \"../data/user.json\";\nimport stats from \"../data/statistical-data.json\";\nimport friends from \"../data/friends.json\";\nimport transactions from \"../data/transactions.json\";\n\nconst App = () => (\n  <div>\n    <Global />\n    <Profile user={user} />\n    <Statisctic statistics={stats} title=\"Upload stats\" />\n    <FriendList friends={friends} />\n    <Transactions transactions={transactions} />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./components/App\";\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}